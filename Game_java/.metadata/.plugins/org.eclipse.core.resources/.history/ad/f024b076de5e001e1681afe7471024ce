package main;

import java.awt.Color;
import java.io.File;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.IOException;

import javax.imageio.ImageIO;

import object.OBJ_Key;
//import java.awt.GraphicsEnvironment;

public class UI {
	GamePanel gp;
	Font font;
	BufferedImage starImage;
//	GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
//	Font customFont = Font.createFont(Font.TRUETYPE_FONT, new java.io.File("/font/Silkscreen-Regular.ttf"));
	
	public UI(GamePanel gp) {
		this.gp = gp;
		font = new Font("Arial",Font.PLAIN,40);
		OBJ_Key star = new OBJ_Key(gp); 
		starImage = star.image ;
		try {
			Font customFont = Font.createFont(Font.TRUETYPE_FONT, new File("res/font/Silkscreen-Regular.ttf"));
			font = customFont.deriveFont(Font.PLAIN, 40);
		} catch (FontFormatException | IOException e) {
			e.printStackTrace();
		}
	}
	public void draw(Graphics2D g2) {
		g2.setFont(font);
		g2.setColor(Color.white);
		if(gp.gamestate == gp.titlestate) {
			drawTitlescreen(g2);
		}
		g2.drawImage(starImage, gp.tilesize/2, gp.tilesize/8, gp.tilesize-12, gp.tilesize-12, null);
		g2.drawString(":"+gp.player.hasStar,110-24,42);
	}
	private void drawTitlescreen(Graphics2D g2) {
		g2.setFont(font);
		g2.setColor(Color.white);
		String text = "gay";
		g2.drawString(text, 50, 50);
	}
}
